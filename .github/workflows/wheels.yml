# .github/workflows/wheels.yml
# GitHub Actions configuration file for building wheels
# See https://github.com/pypa/cibuildwheel for details

name: wheels

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # 64-bit Windows
          - os: windows-latest
            python: 37
            platform: win_amd64
          - os: windows-latest
            python: 38
            platform: win_amd64
          - os: windows-latest
            python: 39
            platform: win_amd64
          - os: windows-latest
            python: 310
            platform: win_amd64

          # 32-bit Windows
          - os: windows-latest
            python: 37
            platform: win32
          - os: windows-latest
            python: 38
            platform: win32
          - os: windows-latest
            python: 39
            platform: win32

          # 64-bit Linux x86_64
          - os: ubuntu-latest
            python: 37
            platform: manylinux_x86_64
          - os: ubuntu-latest
            python: 38
            platform: manylinux_x86_64
          - os: ubuntu-latest
            python: 39
            platform: manylinux_x86_64
          - os: ubuntu-latest
            python: 310
            platform: manylinux_x86_64

          # 64-bit Linux aarch64
          - os: [self-hosted, Linux, ARM64]
            python: 37
            platform: manylinux_aarch64
          - os: [self-hosted, Linux, ARM64]
            python: 38
            platform: manylinux_aarch64
          - os: [self-hosted, Linux, ARM64]
            python: 39
            platform: manylinux_aarch64
          - os: [self-hosted, Linux, ARM64]
            python: 310
            platform: manylinux_aarch64

          # macOS x86_64
          - os: macos-latest
            python: 37
            platform: macosx_x86_64
          - os: macos-latest
            python: 38
            platform: macosx_x86_64
          - os: macos-latest
            python: 39
            platform: macosx_x86_64
          - os: macos-latest
            python: 310
            platform: macosx_x86_64

          # macOS arm64
          - os: macos-latest
            python: 38
            platform: macosx_arm64
          - os: macos-latest
            python: 39
            platform: macosx_arm64
          - os: macos-latest
            python: 310
            platform: macosx_arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        if: ${{ matrix.platform != 'manylinux_aarch64' }}
        uses: actions/setup-python@v4.3.0

      - name: Build wheels on manylinux_aarch64
        if: ${{ matrix.platform == 'manylinux_aarch64' }}
        run: bash build_tools/github/build_wheels.sh
        env:
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform }}
          CIBW_ENVIRONMENT: PIP_DEFAULT_TIMEOUT=21600 PIP_EXTRA_INDEX_URL=https://pypi.tuna.tsinghua.edu.cn/simple

      - name: Build wheels on other platforms
        if: ${{ matrix.platform != 'manylinux_aarch64' }}
        run: bash build_tools/github/build_wheels.sh
        env:
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform }}

      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4.3.0

      - name: Build source distribution
        run: bash build_tools/github/build_source.sh

      - name: Test source distribution
        run: bash build_tools/github/test_source.sh

      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_anaconda:
    name: Upload to Anaconda
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    needs: [build_wheels, build_sdist]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4.3.0

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Upload artifacts to Anaconda
        run: bash build_tools/github/upload_anaconda.sh
        env:
          ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
